[tool:pytest]
# Pytest configuration for API_Next Job Workflow Engine Testing

# Test discovery
testpaths = api_next/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    api: API endpoint tests
    workflow: Workflow engine tests
    security: Security and permission tests
    performance: Performance and load tests
    slow: Tests that take longer to execute (>2s)
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for bug fixes
    edge_case: Edge case and boundary condition tests

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --capture=no
    --durations=10
    --cov=api_next.workflows
    --cov=api_next.job_management
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --cov-branch
    --disable-warnings

# Test filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution settings
# addopts = -n auto  # Uncomment for parallel execution

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = api_next
omit = 
    */tests/*
    */migrations/*
    */patches/*
    */node_modules/*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = API_Next Job Workflow Engine Coverage Report

[coverage:xml]
output = coverage.xml